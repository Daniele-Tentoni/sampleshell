<?xml version="1.0" encoding="UTF-8" ?>
<Shell
    x:Class="SampleShell.AppShell"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:aboutStrings="clr-namespace:SampleShell.Resources.Strings.About"
    xmlns:browse="clr-namespace:SampleShell.Views.Browse"
    xmlns:helpers="clr-namespace:SampleShell.Helpers"
    xmlns:local="clr-namespace:SampleShell.Views"
    xmlns:login="clr-namespace:SampleShell.Views.Login"
    xmlns:loginStrings="clr-namespace:SampleShell.Resources.Strings.Login"
    xmlns:browseStrings="clr-namespace:SampleShell.Resources.Strings.Browse"
    xmlns:settings="clr-namespace:SampleShell.Views.Settings"
    Title="SampleShell">

    <!--
        The overall app visual hierarchy is defined here, along with navigation.
        
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/
    -->

    <Shell.Resources>
        <ResourceDictionary>
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.ForegroundColor" Value="White" />
                <Setter Property="Shell.TitleColor" Value="White" />
                <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.TabBarForegroundColor" Value="White" />
                <Setter Property="Shell.TabBarUnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarTitleColor" Value="White" />
            </Style>
            <Style BasedOn="{StaticResource BaseStyle}" TargetType="TabBar" />
            <Style BasedOn="{StaticResource BaseStyle}" TargetType="FlyoutItem" />
        </ResourceDictionary>
    </Shell.Resources>

    <!--
        If you would like to navigate to this content you can do so by calling
        await Shell.Current.GoToAsync("//LoginPage");
    -->
    <Shell.Items>
        <ShellContent
            ContentTemplate="{DataTemplate login:LoginPage}"
            Route="{x:Static loginStrings:LoginStrings.PageRoute}"
            Shell.NavBarIsVisible="False"
            Title="{x:Static loginStrings:LoginStrings.PageTitle}"/>
    </Shell.Items>

    <TabBar>
        <Tab
            Title="{x:Static aboutStrings:AboutStrings.PageTitle}"
            Route="{x:Static aboutStrings:AboutStrings.PageRoute}"
            Shell.NavBarIsVisible="False">
            <Tab.Icon>
                <FontImageSource FontFamily="fas" Glyph="{x:Static helpers:FontAwesomeIcons.Info}" />
            </Tab.Icon>
            <ShellContent ContentTemplate="{DataTemplate local:AboutPage}" />
        </Tab>
        <Tab
            Title="{x:Static browseStrings:BrowseStrings.PageTitle}"
            Route="{x:Static browseStrings:BrowseStrings.PageRoute}"
            Shell.NavBarIsVisible="False">
            <Tab.Icon>
                <FontImageSource FontFamily="fas" Glyph="{x:Static helpers:FontAwesomeIcons.List}" />
            </Tab.Icon>
            <ShellContent ContentTemplate="{DataTemplate browse:ItemsListPage}" />
        </Tab>
        <Tab
            Title="Settings"
            Route="settings"
            Shell.NavBarIsVisible="False">
            <Tab.Icon>
                <FontImageSource FontFamily="fas" Glyph="{x:Static helpers:FontAwesomeIcons.Cogs}" />
            </Tab.Icon>
            <ShellContent ContentTemplate="{DataTemplate settings:SettingsPage}" />
        </Tab>
    </TabBar>

</Shell>
